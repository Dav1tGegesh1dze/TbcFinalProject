// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.presentation.auth.logIn;

import com.example.middlecourseproject.domain.useCases.GetLanguageUseCase;
import com.example.middlecourseproject.domain.useCases.LoginUseCase;
import com.example.middlecourseproject.domain.useCases.ToggleLanguageUseCase;
import com.example.middlecourseproject.presentation.utils.ErrorMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<LoginUseCase> loginUseCaseProvider;

  private final Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider;

  private final Provider<GetLanguageUseCase> getLanguageUseCaseProvider;

  private final Provider<ErrorMapper> errorMapperProvider;

  public LoginViewModel_Factory(Provider<LoginUseCase> loginUseCaseProvider,
      Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider,
      Provider<GetLanguageUseCase> getLanguageUseCaseProvider,
      Provider<ErrorMapper> errorMapperProvider) {
    this.loginUseCaseProvider = loginUseCaseProvider;
    this.toggleLanguageUseCaseProvider = toggleLanguageUseCaseProvider;
    this.getLanguageUseCaseProvider = getLanguageUseCaseProvider;
    this.errorMapperProvider = errorMapperProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(loginUseCaseProvider.get(), toggleLanguageUseCaseProvider.get(), getLanguageUseCaseProvider.get(), errorMapperProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<LoginUseCase> loginUseCaseProvider,
      Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider,
      Provider<GetLanguageUseCase> getLanguageUseCaseProvider,
      Provider<ErrorMapper> errorMapperProvider) {
    return new LoginViewModel_Factory(loginUseCaseProvider, toggleLanguageUseCaseProvider, getLanguageUseCaseProvider, errorMapperProvider);
  }

  public static LoginViewModel newInstance(LoginUseCase loginUseCase,
      ToggleLanguageUseCase toggleLanguageUseCase, GetLanguageUseCase getLanguageUseCase,
      ErrorMapper errorMapper) {
    return new LoginViewModel(loginUseCase, toggleLanguageUseCase, getLanguageUseCase, errorMapper);
  }
}
