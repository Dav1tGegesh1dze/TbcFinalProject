// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.data.repository;

import com.example.middlecourseproject.data.local.datastore.DataStoreManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class TokenRepositoryImpl_Factory implements Factory<TokenRepositoryImpl> {
  private final Provider<DataStoreManager> dataStoreManagerProvider;

  public TokenRepositoryImpl_Factory(Provider<DataStoreManager> dataStoreManagerProvider) {
    this.dataStoreManagerProvider = dataStoreManagerProvider;
  }

  @Override
  public TokenRepositoryImpl get() {
    return newInstance(dataStoreManagerProvider.get());
  }

  public static TokenRepositoryImpl_Factory create(
      Provider<DataStoreManager> dataStoreManagerProvider) {
    return new TokenRepositoryImpl_Factory(dataStoreManagerProvider);
  }

  public static TokenRepositoryImpl newInstance(DataStoreManager dataStoreManager) {
    return new TokenRepositoryImpl(dataStoreManager);
  }
}
