// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.di.restaurant;

import com.example.middlecourseproject.data.restaurant.api.RestaurantApi;
import com.example.middlecourseproject.domain.restaurant.repository.RestaurantRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideRestaurantRepositoryFactory implements Factory<RestaurantRepository> {
  private final Provider<RestaurantApi> apiProvider;

  public AppModule_ProvideRestaurantRepositoryFactory(Provider<RestaurantApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public RestaurantRepository get() {
    return provideRestaurantRepository(apiProvider.get());
  }

  public static AppModule_ProvideRestaurantRepositoryFactory create(
      Provider<RestaurantApi> apiProvider) {
    return new AppModule_ProvideRestaurantRepositoryFactory(apiProvider);
  }

  public static RestaurantRepository provideRestaurantRepository(RestaurantApi api) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRestaurantRepository(api));
  }
}
