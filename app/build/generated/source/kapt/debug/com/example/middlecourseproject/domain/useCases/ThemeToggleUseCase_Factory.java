// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.domain.useCases;

import com.example.middlecourseproject.domain.theme.ThemeManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ThemeToggleUseCase_Factory implements Factory<ThemeToggleUseCase> {
  private final Provider<ThemeManager> themeManagerProvider;

  public ThemeToggleUseCase_Factory(Provider<ThemeManager> themeManagerProvider) {
    this.themeManagerProvider = themeManagerProvider;
  }

  @Override
  public ThemeToggleUseCase get() {
    return newInstance(themeManagerProvider.get());
  }

  public static ThemeToggleUseCase_Factory create(Provider<ThemeManager> themeManagerProvider) {
    return new ThemeToggleUseCase_Factory(themeManagerProvider);
  }

  public static ThemeToggleUseCase newInstance(ThemeManager themeManager) {
    return new ThemeToggleUseCase(themeManager);
  }
}
