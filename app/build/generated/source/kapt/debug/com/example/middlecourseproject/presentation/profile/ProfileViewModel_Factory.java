// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.presentation.profile;

import com.example.middlecourseproject.domain.useCases.GetLanguageUseCase;
import com.example.middlecourseproject.domain.useCases.GetThemeUseCase;
import com.example.middlecourseproject.domain.useCases.SignOutUseCase;
import com.example.middlecourseproject.domain.useCases.ThemeToggleUseCase;
import com.example.middlecourseproject.domain.useCases.ToggleLanguageUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final Provider<SignOutUseCase> signOutUseCaseProvider;

  private final Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider;

  private final Provider<GetLanguageUseCase> getLanguageUseCaseProvider;

  private final Provider<ThemeToggleUseCase> themeToggleUseCaseProvider;

  private final Provider<GetThemeUseCase> getThemeUseCaseProvider;

  public ProfileViewModel_Factory(Provider<SignOutUseCase> signOutUseCaseProvider,
      Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider,
      Provider<GetLanguageUseCase> getLanguageUseCaseProvider,
      Provider<ThemeToggleUseCase> themeToggleUseCaseProvider,
      Provider<GetThemeUseCase> getThemeUseCaseProvider) {
    this.signOutUseCaseProvider = signOutUseCaseProvider;
    this.toggleLanguageUseCaseProvider = toggleLanguageUseCaseProvider;
    this.getLanguageUseCaseProvider = getLanguageUseCaseProvider;
    this.themeToggleUseCaseProvider = themeToggleUseCaseProvider;
    this.getThemeUseCaseProvider = getThemeUseCaseProvider;
  }

  @Override
  public ProfileViewModel get() {
    return newInstance(signOutUseCaseProvider.get(), toggleLanguageUseCaseProvider.get(), getLanguageUseCaseProvider.get(), themeToggleUseCaseProvider.get(), getThemeUseCaseProvider.get());
  }

  public static ProfileViewModel_Factory create(Provider<SignOutUseCase> signOutUseCaseProvider,
      Provider<ToggleLanguageUseCase> toggleLanguageUseCaseProvider,
      Provider<GetLanguageUseCase> getLanguageUseCaseProvider,
      Provider<ThemeToggleUseCase> themeToggleUseCaseProvider,
      Provider<GetThemeUseCase> getThemeUseCaseProvider) {
    return new ProfileViewModel_Factory(signOutUseCaseProvider, toggleLanguageUseCaseProvider, getLanguageUseCaseProvider, themeToggleUseCaseProvider, getThemeUseCaseProvider);
  }

  public static ProfileViewModel newInstance(SignOutUseCase signOutUseCase,
      ToggleLanguageUseCase toggleLanguageUseCase, GetLanguageUseCase getLanguageUseCase,
      ThemeToggleUseCase themeToggleUseCase, GetThemeUseCase getThemeUseCase) {
    return new ProfileViewModel(signOutUseCase, toggleLanguageUseCase, getLanguageUseCase, themeToggleUseCase, getThemeUseCase);
  }
}
