// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.domain.cart.usecase;

import com.example.middlecourseproject.domain.cart.repository.CartRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class GetCartItemsUseCase_Factory implements Factory<GetCartItemsUseCase> {
  private final Provider<CartRepository> cartRepositoryProvider;

  public GetCartItemsUseCase_Factory(Provider<CartRepository> cartRepositoryProvider) {
    this.cartRepositoryProvider = cartRepositoryProvider;
  }

  @Override
  public GetCartItemsUseCase get() {
    return newInstance(cartRepositoryProvider.get());
  }

  public static GetCartItemsUseCase_Factory create(
      Provider<CartRepository> cartRepositoryProvider) {
    return new GetCartItemsUseCase_Factory(cartRepositoryProvider);
  }

  public static GetCartItemsUseCase newInstance(CartRepository cartRepository) {
    return new GetCartItemsUseCase(cartRepository);
  }
}
