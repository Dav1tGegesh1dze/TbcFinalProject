// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.domain.useCases;

import com.example.middlecourseproject.domain.repository.LanguageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ToggleLanguageUseCase_Factory implements Factory<ToggleLanguageUseCase> {
  private final Provider<LanguageRepository> languageRepositoryProvider;

  public ToggleLanguageUseCase_Factory(Provider<LanguageRepository> languageRepositoryProvider) {
    this.languageRepositoryProvider = languageRepositoryProvider;
  }

  @Override
  public ToggleLanguageUseCase get() {
    return newInstance(languageRepositoryProvider.get());
  }

  public static ToggleLanguageUseCase_Factory create(
      Provider<LanguageRepository> languageRepositoryProvider) {
    return new ToggleLanguageUseCase_Factory(languageRepositoryProvider);
  }

  public static ToggleLanguageUseCase newInstance(LanguageRepository languageRepository) {
    return new ToggleLanguageUseCase(languageRepository);
  }
}
