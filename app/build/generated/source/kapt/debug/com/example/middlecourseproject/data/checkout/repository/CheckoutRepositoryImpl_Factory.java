// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.data.checkout.repository;

import android.content.Context;
import com.example.middlecourseproject.domain.cart.repository.CartRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlinx.serialization.json.Json;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class CheckoutRepositoryImpl_Factory implements Factory<CheckoutRepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<CartRepository> cartRepositoryProvider;

  private final Provider<Json> jsonProvider;

  public CheckoutRepositoryImpl_Factory(Provider<Context> contextProvider,
      Provider<CartRepository> cartRepositoryProvider, Provider<Json> jsonProvider) {
    this.contextProvider = contextProvider;
    this.cartRepositoryProvider = cartRepositoryProvider;
    this.jsonProvider = jsonProvider;
  }

  @Override
  public CheckoutRepositoryImpl get() {
    return newInstance(contextProvider.get(), cartRepositoryProvider.get(), jsonProvider.get());
  }

  public static CheckoutRepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<CartRepository> cartRepositoryProvider, Provider<Json> jsonProvider) {
    return new CheckoutRepositoryImpl_Factory(contextProvider, cartRepositoryProvider, jsonProvider);
  }

  public static CheckoutRepositoryImpl newInstance(Context context, CartRepository cartRepository,
      Json json) {
    return new CheckoutRepositoryImpl(context, cartRepository, json);
  }
}
