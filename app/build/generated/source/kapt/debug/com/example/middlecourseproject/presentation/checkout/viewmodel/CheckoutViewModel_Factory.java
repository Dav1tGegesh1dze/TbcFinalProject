// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.presentation.checkout.viewmodel;

import com.example.middlecourseproject.domain.cart.usecase.GetCartTotalUseCase;
import com.example.middlecourseproject.domain.checkout.usecase.GetDeliveryAddressUseCase;
import com.example.middlecourseproject.domain.checkout.usecase.GetPaymentMethodUseCase;
import com.example.middlecourseproject.domain.checkout.usecase.PlaceOrderUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class CheckoutViewModel_Factory implements Factory<CheckoutViewModel> {
  private final Provider<GetCartTotalUseCase> getCartTotalUseCaseProvider;

  private final Provider<GetDeliveryAddressUseCase> getDeliveryAddressUseCaseProvider;

  private final Provider<GetPaymentMethodUseCase> getPaymentMethodUseCaseProvider;

  private final Provider<PlaceOrderUseCase> placeOrderUseCaseProvider;

  public CheckoutViewModel_Factory(Provider<GetCartTotalUseCase> getCartTotalUseCaseProvider,
      Provider<GetDeliveryAddressUseCase> getDeliveryAddressUseCaseProvider,
      Provider<GetPaymentMethodUseCase> getPaymentMethodUseCaseProvider,
      Provider<PlaceOrderUseCase> placeOrderUseCaseProvider) {
    this.getCartTotalUseCaseProvider = getCartTotalUseCaseProvider;
    this.getDeliveryAddressUseCaseProvider = getDeliveryAddressUseCaseProvider;
    this.getPaymentMethodUseCaseProvider = getPaymentMethodUseCaseProvider;
    this.placeOrderUseCaseProvider = placeOrderUseCaseProvider;
  }

  @Override
  public CheckoutViewModel get() {
    return newInstance(getCartTotalUseCaseProvider.get(), getDeliveryAddressUseCaseProvider.get(), getPaymentMethodUseCaseProvider.get(), placeOrderUseCaseProvider.get());
  }

  public static CheckoutViewModel_Factory create(
      Provider<GetCartTotalUseCase> getCartTotalUseCaseProvider,
      Provider<GetDeliveryAddressUseCase> getDeliveryAddressUseCaseProvider,
      Provider<GetPaymentMethodUseCase> getPaymentMethodUseCaseProvider,
      Provider<PlaceOrderUseCase> placeOrderUseCaseProvider) {
    return new CheckoutViewModel_Factory(getCartTotalUseCaseProvider, getDeliveryAddressUseCaseProvider, getPaymentMethodUseCaseProvider, placeOrderUseCaseProvider);
  }

  public static CheckoutViewModel newInstance(GetCartTotalUseCase getCartTotalUseCase,
      GetDeliveryAddressUseCase getDeliveryAddressUseCase,
      GetPaymentMethodUseCase getPaymentMethodUseCase, PlaceOrderUseCase placeOrderUseCase) {
    return new CheckoutViewModel(getCartTotalUseCase, getDeliveryAddressUseCase, getPaymentMethodUseCase, placeOrderUseCase);
  }
}
