// Generated by Dagger (https://dagger.dev).
package com.example.middlecourseproject.presentation.checkout.viewmodel;

import com.example.middlecourseproject.domain.checkout.usecase.AddPaymentMethodUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class PaymentViewModel_Factory implements Factory<PaymentViewModel> {
  private final Provider<AddPaymentMethodUseCase> addPaymentMethodUseCaseProvider;

  public PaymentViewModel_Factory(
      Provider<AddPaymentMethodUseCase> addPaymentMethodUseCaseProvider) {
    this.addPaymentMethodUseCaseProvider = addPaymentMethodUseCaseProvider;
  }

  @Override
  public PaymentViewModel get() {
    return newInstance(addPaymentMethodUseCaseProvider.get());
  }

  public static PaymentViewModel_Factory create(
      Provider<AddPaymentMethodUseCase> addPaymentMethodUseCaseProvider) {
    return new PaymentViewModel_Factory(addPaymentMethodUseCaseProvider);
  }

  public static PaymentViewModel newInstance(AddPaymentMethodUseCase addPaymentMethodUseCase) {
    return new PaymentViewModel(addPaymentMethodUseCase);
  }
}
